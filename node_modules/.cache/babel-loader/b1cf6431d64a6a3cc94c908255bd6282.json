{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git files\\\\Minecraft\\\\minecraftClone-JS\\\\src\\\\components\\\\TextureSelector.js\",\n    _s = $RefreshSig$();\n\nimport { useStore } from \"../hooks/useStore\";\nimport { useEffect, useState } from 'react';\nimport { useKeyboard } from \"../hooks/useKeyboard\";\nimport { dirtImg, grassImg, glassImg, logImg, woodImg } from '../images/images';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = {\n  dirt: dirtImg,\n  grass: grassImg,\n  glass: glassImg,\n  wood: woodImg,\n  log: logImg\n};\nexport const TextureSelector = () => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [activeTexture, setTexture] = useStore(state => [state.texture, state.setTexture]);\n  const {\n    dirt,\n    grass,\n    glass,\n    wood,\n    log\n  } = useKeyboard();\n  useEffect(() => {\n    const textures = {\n      dirt,\n      grass,\n      glass,\n      wood,\n      log\n    };\n    const pressedTexture = Object.entries(textures).find(_ref => {\n      let [k, v] = _ref;\n      return v;\n    });\n\n    if (pressedTexture) {\n      setTexture(pressedTexture[0]);\n    }\n  }, [setTexture, dirt, grass, glass, wood, log]);\n  useEffect(() => {\n    const visibilityTimeout = setTimeout(() => {\n      setVisible(false);\n    }, 2000);\n    setVisible(true);\n    return () => {\n      clearTimeout(visibilityTimeout);\n    };\n  }, [activeTexture]);\n  return visible && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute centered texture-selector\",\n    children: Object.entries(images).map(_ref2 => {\n      let [k, src] = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: k,\n        src: src,\n        className: `${k === activeTexture ? 'active' : ''}`\n      }, k, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextureSelector, \"XY1Z5Y2f1tSw1yGtg8BYWbXhR+g=\", false, function () {\n  return [useStore, useKeyboard];\n});\n\n_c = TextureSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextureSelector\");","map":{"version":3,"names":["useStore","useEffect","useState","useKeyboard","dirtImg","grassImg","glassImg","logImg","woodImg","images","dirt","grass","glass","wood","log","TextureSelector","visible","setVisible","activeTexture","setTexture","state","texture","textures","pressedTexture","Object","entries","find","k","v","visibilityTimeout","setTimeout","clearTimeout","map","src"],"sources":["D:/Git files/Minecraft/minecraftClone-JS/src/components/TextureSelector.js"],"sourcesContent":["import { useStore } from \"../hooks/useStore\";\r\nimport { useEffect, useState } from 'react'\r\nimport { useKeyboard } from \"../hooks/useKeyboard\";\r\nimport {dirtImg,grassImg,glassImg,logImg,woodImg} from '../images/images'\r\n\r\n\r\nconst images={\r\n  dirt:dirtImg,\r\n  grass:grassImg,\r\n  glass:glassImg,\r\n  wood:woodImg,\r\n  log:logImg\r\n}\r\nexport const TextureSelector = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [activeTexture,setTexture] = useStore((state) => [state.texture,state.setTexture])\r\n  const {\r\n    dirt,\r\n    grass,\r\n    glass,\r\n    wood,\r\n    log,}=useKeyboard();\r\n\r\n    \r\n    useEffect(()=>{\r\n      const textures={\r\n        dirt,\r\n        grass,\r\n        glass,\r\n        wood,\r\n        log\r\n      }\r\n      const pressedTexture=Object.entries(textures).find(([k,v])=>v)\r\n      if(pressedTexture){\r\n        setTexture(pressedTexture[0]);\r\n      }\r\n    },[setTexture,dirt,grass,glass,wood,log])\r\n\r\n  useEffect(() => {\r\n    const visibilityTimeout = setTimeout(() => {\r\n      setVisible(false)\r\n    },2000)\r\n    setVisible(true)\r\n    return ()=>{\r\n      clearTimeout(visibilityTimeout)\r\n    }\r\n  }, [activeTexture])\r\n  \r\n  return visible && (\r\n    <div className=\"absolute centered texture-selector\">\r\n      {Object.entries(images).map(([k,src])=>{\r\n        return <img alt={k} key={k} src={src} className={`${k===activeTexture?'active':''}`}/>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAAQC,OAAR,EAAgBC,QAAhB,EAAyBC,QAAzB,EAAkCC,MAAlC,EAAyCC,OAAzC,QAAuD,kBAAvD;;AAGA,MAAMC,MAAM,GAAC;EACXC,IAAI,EAACN,OADM;EAEXO,KAAK,EAACN,QAFK;EAGXO,KAAK,EAACN,QAHK;EAIXO,IAAI,EAACL,OAJM;EAKXM,GAAG,EAACP;AALO,CAAb;AAOA,OAAO,MAAMQ,eAAe,GAAG,MAAM;EAAA;;EACnC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACgB,aAAD,EAAeC,UAAf,IAA6BnB,QAAQ,CAAEoB,KAAD,IAAW,CAACA,KAAK,CAACC,OAAP,EAAeD,KAAK,CAACD,UAArB,CAAZ,CAA3C;EACA,MAAM;IACJT,IADI;IAEJC,KAFI;IAGJC,KAHI;IAIJC,IAJI;IAKJC;EALI,IAKEX,WAAW,EALnB;EAQEF,SAAS,CAAC,MAAI;IACZ,MAAMqB,QAAQ,GAAC;MACbZ,IADa;MAEbC,KAFa;MAGbC,KAHa;MAIbC,IAJa;MAKbC;IALa,CAAf;IAOA,MAAMS,cAAc,GAACC,MAAM,CAACC,OAAP,CAAeH,QAAf,EAAyBI,IAAzB,CAA8B;MAAA,IAAC,CAACC,CAAD,EAAGC,CAAH,CAAD;MAAA,OAASA,CAAT;IAAA,CAA9B,CAArB;;IACA,IAAGL,cAAH,EAAkB;MAChBJ,UAAU,CAACI,cAAc,CAAC,CAAD,CAAf,CAAV;IACD;EACF,CAZQ,EAYP,CAACJ,UAAD,EAAYT,IAAZ,EAAiBC,KAAjB,EAAuBC,KAAvB,EAA6BC,IAA7B,EAAkCC,GAAlC,CAZO,CAAT;EAcFb,SAAS,CAAC,MAAM;IACd,MAAM4B,iBAAiB,GAAGC,UAAU,CAAC,MAAM;MACzCb,UAAU,CAAC,KAAD,CAAV;IACD,CAFmC,EAElC,IAFkC,CAApC;IAGAA,UAAU,CAAC,IAAD,CAAV;IACA,OAAO,MAAI;MACTc,YAAY,CAACF,iBAAD,CAAZ;IACD,CAFD;EAGD,CARQ,EAQN,CAACX,aAAD,CARM,CAAT;EAUA,OAAOF,OAAO,iBACZ;IAAK,SAAS,EAAC,oCAAf;IAAA,UACGQ,MAAM,CAACC,OAAP,CAAehB,MAAf,EAAuBuB,GAAvB,CAA2B,SAAW;MAAA,IAAV,CAACL,CAAD,EAAGM,GAAH,CAAU;MACrC,oBAAO;QAAK,GAAG,EAAEN,CAAV;QAAqB,GAAG,EAAEM,GAA1B;QAA+B,SAAS,EAAG,GAAEN,CAAC,KAAGT,aAAJ,GAAkB,QAAlB,GAA2B,EAAG;MAA3E,GAAkBS,CAAlB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA1CM;;GAAMZ,e;UAEwBf,Q,EAM3BG,W;;;KARGY,e"},"metadata":{},"sourceType":"module"}