{"ast":null,"code":"import _slicedToArray from\"D:/Git files/Minecraft/minecraftClone-JS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{usePlane}from'@react-three/cannon';import{groundTexture}from'../images/textures';import{useStore}from'../hooks/useStore';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Ground=function Ground(){var _usePlane=usePlane(function(){return{rotation:[-Math.PI/2,0,0],position:[0,-0.5,0]};}),_usePlane2=_slicedToArray(_usePlane,1),ref=_usePlane2[0];var _useStore=useStore(function(state){return[state.addCube];}),_useStore2=_slicedToArray(_useStore,1),addCube=_useStore2[0];groundTexture.repeat.set(100,100);return/*#__PURE__*/_jsxs(\"mesh\",{onClick:function onClick(e){e.stopPropagation();var _Object$values$map=Object.values(e.point).map(function(val){return Math.ceil(val);}),_Object$values$map2=_slicedToArray(_Object$values$map,3),x=_Object$values$map2[0],y=_Object$values$map2[1],z=_Object$values$map2[2];addCube(x,y,z);},ref:ref,children:[/*#__PURE__*/_jsx(\"planeBufferGeometry\",{attach:\"geometry\",args:[100,100]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{attach:\"material\",map:groundTexture})]});};","map":{"version":3,"names":["usePlane","groundTexture","useStore","Ground","rotation","Math","PI","position","ref","state","addCube","repeat","set","e","stopPropagation","Object","values","point","map","val","ceil","x","y","z"],"sources":["D:/Git files/Minecraft/minecraftClone-JS/src/components/Ground.js"],"sourcesContent":["import {usePlane}  from '@react-three/cannon'\r\nimport {groundTexture} from '../images/textures'\r\nimport { useStore } from '../hooks/useStore'\r\n\r\nexport const Ground=()=>{\r\n  const [ref]=usePlane(()=>({\r\n    rotation:[-Math.PI/2,0,0],\r\n    position:[0,-0.5,0]\r\n  }))\r\n  const [addCube]=useStore((state)=>[state.addCube])\r\n\r\n  groundTexture.repeat.set(100,100);\r\n \r\n  return (\r\n    <mesh\r\n    onClick={(e)=>{\r\n        e.stopPropagation();\r\n        const [x,y,z]=Object.values(e.point).map(val=>Math.ceil(val));\r\n        addCube(x,y,z)\r\n    }}  \r\n    ref={ref}>\r\n      <planeBufferGeometry attach='geometry' args={[100,100]}/>\r\n      <meshStandardMaterial attach='material' map={groundTexture}/>\r\n    </mesh>\r\n  )\r\n}"],"mappings":"+JAAA,OAAQA,QAAR,KAAwB,qBAAxB,CACA,OAAQC,aAAR,KAA4B,oBAA5B,CACA,OAASC,QAAT,KAAyB,mBAAzB,C,wFAEA,MAAO,IAAMC,OAAM,CAAC,QAAPA,OAAO,EAAI,CACtB,cAAYH,QAAQ,CAAC,iBAAK,CACxBI,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,EAAN,CAAS,CAAV,CAAY,CAAZ,CAAc,CAAd,CADe,CAExBC,QAAQ,CAAC,CAAC,CAAD,CAAG,CAAC,GAAJ,CAAQ,CAAR,CAFe,CAAL,EAAD,CAApB,wCAAOC,GAAP,eAIA,cAAgBN,QAAQ,CAAC,SAACO,KAAD,QAAS,CAACA,KAAK,CAACC,OAAP,CAAT,EAAD,CAAxB,wCAAOA,OAAP,eAEAT,aAAa,CAACU,MAAd,CAAqBC,GAArB,CAAyB,GAAzB,CAA6B,GAA7B,EAEA,mBACE,cACA,OAAO,CAAE,iBAACC,CAAD,CAAK,CACVA,CAAC,CAACC,eAAF,GACA,uBAAcC,MAAM,CAACC,MAAP,CAAcH,CAAC,CAACI,KAAhB,EAAuBC,GAAvB,CAA2B,SAAAC,GAAG,QAAEd,KAAI,CAACe,IAAL,CAAUD,GAAV,CAAF,EAA9B,CAAd,0DAAOE,CAAP,wBAASC,CAAT,wBAAWC,CAAX,wBACAb,OAAO,CAACW,CAAD,CAAGC,CAAH,CAAKC,CAAL,CAAP,CACH,CALD,CAMA,GAAG,CAAEf,GANL,wBAOE,4BAAqB,MAAM,CAAC,UAA5B,CAAuC,IAAI,CAAE,CAAC,GAAD,CAAK,GAAL,CAA7C,EAPF,cAQE,6BAAsB,MAAM,CAAC,UAA7B,CAAwC,GAAG,CAAEP,aAA7C,EARF,GADF,CAYD,CArBM"},"metadata":{},"sourceType":"module"}